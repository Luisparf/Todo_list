{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/todolist/frontend/src/pages/Lists/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header';\nimport Task from '../../components/Task';\nimport InsertList from '../../components/InsertList';\nimport InsertTask from '../../components/InsertTask';\nimport { Container, Grid } from '@material-ui/core';\nimport api from '../../services/api';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const [token] = useState(localStorage.getItem('token'));\n  const [taskList, setTaskList] = useState([]);\n  const [listId, setListId] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    api.get('api/v1/tasklist', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.data.status && response.data.status === (401 || 498)) {\n        localStorage.clear();\n        history.push('/');\n      } else {\n        setTaskList(response.data.data);\n      }\n    }).catch(err => {\n      alert(err);\n    });\n  }, [token]);\n\n  async function onInsertList(data) {\n    api.post(\"/api/v1/tasklist\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      if (response.data.status && response.data.status === (401 || 498)) {\n        localStorage.clear();\n        history.push('/');\n      }\n\n      setTaskList([...taskList, response.data.data]);\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  async function onInsertTask(data) {\n    await setListId('');\n    await api.post(\"/api/v1/tasks\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response.data.status && response.data.status === (401 || 498)) {\n        localStorage.clear();\n        history.push('/');\n      }\n\n      setListId(response.data.data.list_id);\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: [/*#__PURE__*/_jsxDEV(InsertList, {\n            onInsertList: onInsertList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InsertTask, {\n            onInsertTask: onInsertTask,\n            taskList: taskList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"xl\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: taskList.length > 0 ? taskList.map(list => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ListContainer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ListHeader\",\n                    children: list.status === \"To do\" ? /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"ListTitle\",\n                      children: list.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 29\n                    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"ListTitle\",\n                      children: [list.title, \" - Finished\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Taks\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"TaskItem\",\n                      children: /*#__PURE__*/_jsxDEV(Container, {\n                        maxWidth: \"xl\",\n                        children: /*#__PURE__*/_jsxDEV(Task, {\n                          list: list.id,\n                          listId: listId\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, this)\n              }, list.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lists, \"qGahCo49bqR14l/r7cHHGLeiXNE=\", false, function () {\n  return [useHistory];\n});\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["/home/luis/Desktop/todolist/frontend/src/pages/Lists/index.js"],"names":["React","useState","useEffect","useHistory","Header","Task","InsertList","InsertTask","Container","Grid","api","Lists","token","localStorage","getItem","taskList","setTaskList","listId","setListId","history","get","headers","Authorization","then","response","data","status","clear","push","catch","err","alert","onInsertList","post","onInsertTask","console","log","list_id","length","map","list","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAiC,mBAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,KAAD,IAAUX,QAAQ,CAACY,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,MAAD,EAAQC,SAAR,IAAqBjB,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAMkB,OAAO,GAAGhB,UAAU,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,GAAG,CAACU,GAAJ,CAAQ,iBAAR,EAA2B;AACzBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASV,KAAM;AADxB;AADgB,KAA3B,EAIGW,IAJH,CAIQC,QAAQ,IAAI;AAClB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,IAAwBF,QAAQ,CAACC,IAAT,CAAcC,MAAd,MAA0B,OAAO,GAAjC,CAA3B,EAAiE;AAC/Db,QAAAA,YAAY,CAACc,KAAb;AACAR,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD,OAHD,MAGK;AACHZ,QAAAA,WAAW,CAACQ,QAAQ,CAACC,IAAT,CAAcA,IAAf,CAAX;AACD;AACF,KAXD,EAWGI,KAXH,CAWSC,GAAG,IAAI;AACdC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD,KAbD;AAcD,GAfQ,EAeN,CAAClB,KAAD,CAfM,CAAT;;AAiBA,iBAAeoB,YAAf,CAA4BP,IAA5B,EAAiC;AAC/Bf,IAAAA,GAAG,CAACuB,IAAJ,CAAS,kBAAT,EAA6BR,IAA7B,EAAmC;AACjCJ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASV,KAAM;AADxB;AADwB,KAAnC,EAIGW,IAJH,CAIQC,QAAQ,IAAI;AAClB,UAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,IAAwBF,QAAQ,CAACC,IAAT,CAAcC,MAAd,MAA0B,OAAO,GAAjC,CAA3B,EAAiE;AAC/Db,QAAAA,YAAY,CAACc,KAAb;AACAR,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD;;AACDZ,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcS,QAAQ,CAACC,IAAT,CAAcA,IAA5B,CAAD,CAAX;AACD,KAVD,EAUGI,KAVH,CAUSC,GAAG,IAAI;AACdC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD,KAZD;AAaD;;AAED,iBAAeI,YAAf,CAA4BT,IAA5B,EAAiC;AAC/B,UAAMP,SAAS,CAAC,EAAD,CAAf;AACA,UAAMR,GAAG,CAACuB,IAAJ,CAAS,eAAT,EAA0BR,IAA1B,EAAgC;AACpCJ,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASV,KAAM;AADxB;AAD2B,KAAhC,EAIHW,IAJG,CAIEC,QAAQ,IAAI;AAClBW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;;AACA,UAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,IAAwBF,QAAQ,CAACC,IAAT,CAAcC,MAAd,MAA0B,OAAO,GAAjC,CAA3B,EAAiE;AAC/Db,QAAAA,YAAY,CAACc,KAAb;AACAR,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD;;AACDV,MAAAA,SAAS,CAACM,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBY,OAApB,CAAT;AACD,KAXK,EAWHR,KAXG,CAWGC,GAAG,IAAI;AACdC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD,KAbK,CAAN;AAeD;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,YAAY,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,YAAY,EAAEE,YAA1B;AAAwC,YAAA,QAAQ,EAAEnB;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,CAAf;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAC,IAApB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAA,wBACGA,QAAQ,CAACuB,MAAT,GAAkB,CAAlB,GAAsBvB,QAAQ,CAACwB,GAAT,CAAcC,IAAD,iBAEhC,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,eAAf;AAAA,0CACE;AAAK,oBAAA,SAAS,EAAC,YAAf;AAAA,8BACGA,IAAI,CAACd,MAAL,KAAgB,OAAhB,gBACC;AAAI,sBAAA,SAAS,EAAC,WAAd;AAAA,gCAA2Bc,IAAI,CAACC;AAAhC;AAAA;AAAA;AAAA;AAAA,4BADD,gBAGC;AAAI,sBAAA,SAAS,EAAC,WAAd;AAAA,iCAA2BD,IAAI,CAACC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,0BADF,eASE;AAAK,oBAAA,SAAS,EAAC,MAAf;AAAA,2CACE;AAAK,sBAAA,SAAS,EAAC,UAAf;AAAA,6CACE,QAAC,SAAD;AAAW,wBAAA,QAAQ,EAAC,IAApB;AAAA,+CACE,QAAC,IAAD;AAAM,0BAAA,IAAI,EAAED,IAAI,CAACE,EAAjB;AAAqB,0BAAA,MAAM,EAAEzB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,iBAAuBuB,IAAI,CAACE,EAA5B;AAAA;AAAA;AAAA;AAAA,sBAFmB,CAAtB,GAqBM;AAtBT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAvGuB/B,K;UAKNR,U;;;KALMQ,K","sourcesContent":["import React, { useState,   useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from '../../components/Header'\nimport Task from '../../components/Task'\nimport InsertList from '../../components/InsertList'\nimport InsertTask from '../../components/InsertTask'\nimport { Container, Grid  } from '@material-ui/core';\nimport api from '../../services/api';\nimport './styles.css';\n\nexport default function Lists() {\n  const [token] = useState(localStorage.getItem('token'));\n  const [taskList, setTaskList] = useState([]);\n  const [listId,setListId] = useState('');\n\n  const history = useHistory();\n\n  useEffect(() => {\n    api.get('api/v1/tasklist', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    }).then(response => {\n      if(response.data.status && response.data.status === (401 || 498)){\n        localStorage.clear();\n        history.push('/');\n      }else{\n        setTaskList(response.data.data);\n      }\n    }).catch(err => {\n      alert(err)\n    })\n  }, [token]);\n\n  async function onInsertList(data){\n    api.post(\"/api/v1/tasklist\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    }).then(response => {\n      if(response.data.status && response.data.status === (401 || 498)){\n        localStorage.clear();\n        history.push('/');\n      }\n      setTaskList([...taskList, response.data.data]);\n    }).catch(err => {\n      alert(err)\n    })\n  }\n\n  async function onInsertTask(data){\n    await setListId('')\n    await api.post(\"/api/v1/tasks\", data, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    }).then(response => {\n      console.log(response)\n      if(response.data.status && response.data.status === (401 || 498)){\n        localStorage.clear();\n        history.push('/');\n      }\n      setListId(response.data.data.list_id)\n    }).catch(err => {\n      alert(err)\n    })\n    \n  }\n  \n  return (\n    <React.Fragment>\n      <Header />\n\n      <Container maxWidth=\"xl\">\n        <Grid container>\n          <Grid item xs={3}>\n            <InsertList onInsertList={onInsertList} />\n            <InsertTask onInsertTask={onInsertTask} taskList={taskList} />\n          </Grid>\n          \n          <Grid item xs={8}>\n            <Container maxWidth=\"xl\">\n              <Grid container>\n                {taskList.length > 0 ? taskList.map((list) => \n                  ( \n                    <Grid item xs={4} key={list.id}>\n                      <div className=\"ListContainer\">\n                        <div className=\"ListHeader\">\n                          {list.status === \"To do\" ? (\n                            <h3 className=\"ListTitle\">{list.title}</h3>\n                          ) : (\n                            <h3 className=\"ListTitle\">{list.title} - Finished</h3>\n                          )}\n                          \n                        </div>\n                        <div className=\"Taks\">\n                          <div className=\"TaskItem\">\n                            <Container maxWidth=\"xl\">\n                              <Task list={list.id} listId={listId} />\n                            </Container>\n                          </div>\n                        </div>\n                      </div>\n                    </Grid>\n                  )) : null \n                }\n              </Grid>\n            </Container>\n          </Grid>\n        </Grid>\n      </Container>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}