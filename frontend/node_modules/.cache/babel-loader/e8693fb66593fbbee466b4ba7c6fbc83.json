{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/todolist/frontend/src/components/Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { FiTrash } from 'react-icons/fi';\nimport { Checkbox, FormControl, FormGroup, FormControlLabel, Grid } from '@material-ui/core';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[800]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 15\n}, this));\n_c = GreenCheckbox;\nexport default function Task(_ref) {\n  _s();\n\n  let {\n    list,\n    listId\n  } = _ref;\n  const [token] = useState(localStorage.getItem('token'));\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    getTasks();\n  }, [list]);\n  useEffect(() => {\n    if (list === listId) {\n      getTasks();\n    }\n  }, [listId]);\n\n  const getTasks = async function () {\n    let list_id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const getList = list_id === '' ? list : list_id;\n    const response = await api.get(`api/v1/list/tasks/${getList}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n\n    if (response.data) {\n      return setTasks(response.data.data);\n    }\n\n    setTasks([]);\n  };\n\n  const handleChange = async event => {\n    event.preventDefault();\n    const taskId = parseInt(event.target.value);\n    api.put(`api/v1/task/close/${taskId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      getTasks(response.data.data.list_id);\n    });\n  };\n\n  const handleDelete = async task => {\n    api.delete(`/api/v1/tasks/${task}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      getTasks(response.data.data.list_id);\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          children: /*#__PURE__*/_jsxDEV(FormGroup, {\n            \"aria-label\": \"position\",\n            row: true,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: task.id,\n              control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n                checked: task.status === \"To do\" ? false : true,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 28\n              }, this),\n              label: task.title,\n              labelPlacement: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        children: /*#__PURE__*/_jsxDEV(FiTrash, {\n          className: \"floatRight deleteIcon\",\n          onClick: () => handleDelete(task.id),\n          size: 18\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Task, \"sYy5T/y6ied71I7XRW70kpKLn9Q=\");\n\n_c2 = Task;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GreenCheckbox\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"sources":["/home/luis/Desktop/todolist/frontend/src/components/Task.js"],"names":["React","useState","useEffect","withStyles","green","FiTrash","Checkbox","FormControl","FormGroup","FormControlLabel","Grid","api","GreenCheckbox","root","color","checked","props","Task","list","listId","token","localStorage","getItem","tasks","setTasks","getTasks","list_id","getList","response","get","headers","Authorization","data","handleChange","event","preventDefault","taskId","parseInt","target","value","put","then","handleDelete","task","delete","catch","err","alert","length","map","id","status","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,EAA2CC,gBAA3C,EAA6DC,IAA7D,QAA0E,mBAA1E;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,aAAa,GAAGT,UAAU,CAAC;AAC/BU,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEV,KAAK,CAAC,GAAD,CADR;AAEJ,iBAAa;AACXU,MAAAA,KAAK,EAAEV,KAAK,CAAC,GAAD;AADD;AAFT,GADyB;AAO/BW,EAAAA,OAAO,EAAE;AAPsB,CAAD,CAAV,CAQlBC,KAAD,iBAAW,QAAC,QAAD;AAAU,EAAA,KAAK,EAAC,SAAhB;AAAA,KAA8BA;AAA9B;AAAA;AAAA;AAAA;AAAA,QARQ,CAAtB;KAAMJ,a;AAUN,eAAe,SAASK,IAAT,OAA+B;AAAA;;AAAA,MAAjB;AAAEC,IAAAA,IAAF;AAAOC,IAAAA;AAAP,GAAiB;AAC5C,QAAM,CAACC,KAAD,IAAUnB,QAAQ,CAACoB,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACP,IAAD,CAFM,CAAT;AAIAhB,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGgB,IAAI,KAAKC,MAAZ,EAAmB;AACjBM,MAAAA,QAAQ;AACT;AACF,GAJQ,EAIP,CAACN,MAAD,CAJO,CAAT;;AAMA,QAAMM,QAAQ,GAAG,kBAAoB;AAAA,QAAdC,OAAc,uEAAN,EAAM;AACnC,UAAMC,OAAO,GAAGD,OAAO,KAAK,EAAZ,GAAiBR,IAAjB,GAAwBQ,OAAxC;AACA,UAAME,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAJ,CAAS,qBAAoBF,OAAQ,EAArC,EAAwC;AAC7DG,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADoD,KAAxC,CAAvB;;AAKA,QAAGQ,QAAQ,CAACI,IAAZ,EAAiB;AACf,aAAOR,QAAQ,CAACI,QAAQ,CAACI,IAAT,CAAcA,IAAf,CAAf;AACD;;AACDR,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAXD;;AAaA,QAAMS,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACH,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAvB;AAEA5B,IAAAA,GAAG,CAAC6B,GAAJ,CAAS,qBAAoBJ,MAAO,EAApC,EAAuC,EAAvC,EAA2C;AACzCN,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADgC,KAA3C,EAIGqB,IAJH,CAIQb,QAAQ,IAAI;AAClBH,MAAAA,QAAQ,CAACG,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBN,OAApB,CAAR;AACD,KAND;AAOD,GAXD;;AAaA,QAAMgB,YAAY,GAAG,MAAOC,IAAP,IAAgB;AACnChC,IAAAA,GAAG,CAACiC,MAAJ,CAAY,iBAAgBD,IAAK,EAAjC,EAAoC;AAClCb,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADyB,KAApC,EAIGqB,IAJH,CAIQb,QAAQ,IAAI;AAClBH,MAAAA,QAAQ,CAACG,QAAQ,CAACI,IAAT,CAAcA,IAAd,CAAmBN,OAApB,CAAR;AACD,KAND,EAMGmB,KANH,CAMSC,GAAG,IAAI;AACdC,MAAAA,KAAK,CAACD,GAAD,CAAL;AACD,KARD;AASD,GAVD;;AAYA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,cACGvB,KAAK,CAACyB,MAAN,GAAe,CAAf,GAAmBzB,KAAK,CAAC0B,GAAN,CAAWN,IAAD,iBAE1B,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAA,iCACE,QAAC,SAAD;AAAW,0BAAW,UAAtB;AAAiC,YAAA,GAAG,MAApC;AAAA,mCACE,QAAC,gBAAD;AACA,cAAA,KAAK,EAAEA,IAAI,CAACO,EADZ;AAEA,cAAA,OAAO,eAAE,QAAC,aAAD;AAAe,gBAAA,OAAO,EAAEP,IAAI,CAACQ,MAAL,KAAgB,OAAhB,GAA0B,KAA1B,GAAkC,IAA1D;AAAgE,gBAAA,QAAQ,EAAElB;AAA1E;AAAA;AAAA;AAAA;AAAA,sBAFT;AAGA,cAAA,KAAK,EAAEU,IAAI,CAACS,KAHZ;AAIA,cAAA,cAAc,EAAC;AAJf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,uBAAnB;AAA2C,UAAA,OAAO,EAAE,MAAMV,YAAY,CAACC,IAAI,CAACO,EAAN,CAAtE;AAAiF,UAAA,IAAI,EAAE;AAAvF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,OAAqBP,IAAI,CAACO,EAA1B;AAAA;AAAA;AAAA;AAAA,YAFgB,CAAnB,GAoBG;AArBN;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA7EuBjC,I;;MAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport { FiTrash } from 'react-icons/fi';\nimport { Checkbox, FormControl, FormGroup, FormControlLabel, Grid  } from '@material-ui/core';\nimport api from '../services/api';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[600],\n    '&$checked': {\n      color: green[800],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default function Task({ list,listId }) {\n  const [token] = useState(localStorage.getItem('token'));\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    getTasks();\n  }, [list]);  \n\n  useEffect(()=>{\n    if(list === listId){\n      getTasks()\n    }\n  },[listId]);\n\n  const getTasks = async(list_id='') =>{\n    const getList = list_id === '' ? list : list_id;\n    const response = await api.get(`api/v1/list/tasks/${getList}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    })\n    if(response.data){\n      return setTasks(response.data.data);\n    }\n    setTasks([])\n  }\n\n  const handleChange = async (event) => {\n    event.preventDefault();\n    const taskId = parseInt(event.target.value);\n\n    api.put(`api/v1/task/close/${taskId}`, {} ,{\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    }).then(response => {\n      getTasks(response.data.data.list_id);\n    })\n  };\n  \n  const handleDelete = async (task) => {\n    api.delete(`/api/v1/tasks/${task}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      }\n    }).then(response => {\n      getTasks(response.data.data.list_id);\n    }).catch(err => {\n      alert(err)\n    })\n  }\n\n  return (\n    <React.Fragment>\n      {tasks.length > 0 ? tasks.map((task) => \n        ( \n          <Grid container key={task.id}>\n            <Grid item xs={10}>\n              <FormControl component=\"fieldset\">\n                <FormGroup aria-label=\"position\" row>\n                  <FormControlLabel\n                  value={task.id}\n                  control={<GreenCheckbox checked={task.status === \"To do\" ? false : true} onChange={handleChange} />}\n                  label={task.title}\n                  labelPlacement=\"end\"\n                  />\n                </FormGroup>\n              </FormControl>\n            </Grid>\n            <Grid item xs={2}>\n              <FiTrash className=\"floatRight deleteIcon\" onClick={() => handleDelete(task.id)} size={18} />\n            </Grid>\n          </Grid>\n        )\n      ) : null }\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}