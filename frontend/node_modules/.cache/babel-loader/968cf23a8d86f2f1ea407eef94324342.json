{"ast":null,"code":"var _jsxFileName = \"/home/luis/Desktop/todolist/frontend/src/components/InsertTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InsertTask(_ref) {\n  _s();\n\n  let {\n    onInsertTask,\n    taskList\n  } = _ref;\n  const [lists, setLists] = useState([]);\n  const [selectList, setSelectList] = useState(\"\");\n  const [taskName, setTaskName] = useState(\"\");\n  useEffect(() => {\n    if (taskList.length > 0) {\n      setLists(taskList);\n    }\n  }, [taskList]);\n\n  const handleChangeSelect = event => {\n    setSelectList(event === null || event === void 0 ? void 0 : event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    await onInsertTask({\n      \"list_id\": selectList,\n      \"title\": taskName,\n      \"status\": 0\n    });\n    setSelectList(\"\");\n    setTaskName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Register task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"taskName\",\n          id: \"taskName\",\n          label: \"Task tittle\",\n          className: \"TextFieldBlock\",\n          value: taskName,\n          onChange: e => setTaskName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectBox\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"fullWidth\",\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"select-list-label\",\n            children: \"Select list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"select-list-label\",\n            id: \"select-list\",\n            name: \"taskList\",\n            value: selectList,\n            onChange: handleChangeSelect,\n            children: lists.length > 0 ? lists.map(list => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: list.id,\n              children: list.title\n            }, list.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this)) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InsertTask, \"c+505M82VPA0z5QxGLNad7lZQ9g=\");\n\n_c = InsertTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"InsertTask\");","map":{"version":3,"sources":["/home/luis/Desktop/todolist/frontend/src/components/InsertTask.js"],"names":["React","useState","useEffect","TextField","FormControl","InputLabel","Select","MenuItem","InsertTask","onInsertTask","taskList","lists","setLists","selectList","setSelectList","taskName","setTaskName","length","handleChangeSelect","event","target","value","handleSubmit","preventDefault","e","map","list","id","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\n\nexport default function InsertTask({ onInsertTask, taskList }) {\n  const [lists, setLists] = useState([]);\n  const [selectList, setSelectList] = useState(\"\");\n  const [taskName, setTaskName] = useState(\"\");\n  \n  useEffect(() => {\n    if(taskList.length > 0){\n      setLists(taskList);\n    }\n  }, [taskList]);\n\n  const handleChangeSelect = (event) => {\n    setSelectList(event?.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    await onInsertTask({\n      \"list_id\": selectList,\n      \"title\": taskName,\n      \"status\": 0\n    });\n\n    setSelectList(\"\");\n    setTaskName(\"\");\n  };\n\n  return (\n    <div className=\"form\">\n      <strong>Register task</strong>\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        \n        <div>\n          <TextField \n            name=\"taskName\" \n            id=\"taskName\" \n            label=\"Task tittle\"\n            className=\"TextFieldBlock\" \n            value={taskName}\n            onChange={e => setTaskName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"selectBox\">\n          <FormControl className=\"fullWidth\">\n            <InputLabel id=\"select-list-label\">Select list</InputLabel>\n            <Select\n              labelId=\"select-list-label\"\n              id=\"select-list\"\n              name=\"taskList\" \n              value={selectList}\n              onChange={handleChangeSelect}\n            >\n              {lists.length > 0 ? lists.map((list) => \n                (\n                  <MenuItem key={list.id} value={list.id}>{list.title}</MenuItem>\n                )\n              ): null }\n            </Select>\n          </FormControl>\n        </div>\n\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}